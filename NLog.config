<!--<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <targets>
    <target name="console" xsi:type="Console" />
    <target name="debugger" xsi:type="Debugger" layout="${date:format=HH\:mm\:ss.fff}: ${message}" />
    <target name="error_file" xsi:type="File"
                    fileName="${basedir}/Logs/Error/${shortdate}/error.txt" maxArchiveFiles="30"
                    layout="${longdate} | ${level:uppercase=false} | ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />
  </targets>
  <rules>
    -->
<!--<logger name="*" writeTo="console" />-->
<!--
    <logger name="*" minlevel="Debug" writeTo="debugger" />
    <logger name="*" minlevel="Error" writeTo="error_file" />
  </rules>
</nlog>-->


<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" autoReload="true">
  <targets>
    <default-wrapper xsi:type="BufferingWrapper" bufferSize="100" FlushTimeout="10000">
      <wrapper-target xsi:type="AsyncWrapper"/>
    </default-wrapper>
    <!-- write logs to file -->
    <!--<target name="log2db" 
            xsi:type="File"  
            fileName="D://logs/${shortdate}.log"
            layout="${longdate} ${event-properties:item=RequestKey} ${event-properties:item=UserName} ${event-properties:item=OrderNo}  ${message} ${event-properties:item=KeyWord}"  />-->
    
    <target name="logInfo2file" 
            xsi:type="File" 
            maxArchiveFiles="1"
            fileName="${basedir}/logs/info.${shortdate}.log" layout="${longdate} ${level} ${message}"/>
    <target name="logError2file"
            xsi:type="File"
            maxArchiveFiles="1"
            fileName="${basedir}/logs/error.${shortdate}.log" layout="${longdate} ${level} ${message}"/>
    
    <target name="log2db" xsi:type="Database">
      <!-- SQL command to be executed for each entry -->
      <commandText>
        INSERT INTO [LogEntries](FromUser,ToUser,ApprovalUser,SendTime,ApprovalTime,Status,SubjectTitle,LogTime)
        VALUES(@FromUser,@ToUser,@ApprovalUser,@SendTime,@ApprovalTime,@Status,@SubjectTitle,getdate())
      </commandText>
      <!-- parameters for the command -->
      <parameter name="@FromUser" layout="${event-properties:item=FromUser}" />
      <parameter name="@ToUser" layout="${event-properties:item=ToUser}" />
      <parameter name="@ApprovalUser" layout="${event-properties:item=ApprovalUser}" />
      <parameter name="@SendTime" layout="${event-properties:item=SendTime}" />
      <parameter name="@ApprovalTime" layout="${event-properties:item=ApprovalTime}" />
      <parameter name="@Status" layout="${event-properties:item=Status}" />
      <parameter name="@SubjectTitle" layout="${message}" />
      <!--<parameter name="@LogTime" layout="${longdate}" />-->
      <!-- connection string -->
      <dbProvider>System.Data.SqlClient</dbProvider>
      <connectionString>Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=logdb;Integrated Security=True;Persist Security Info=False;Pooling=False;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=True</connectionString>
    </target>
  </targets>
  <rules>
    <logger name="logInfo2file" minlevel="Error" writeTo="logInfo2file" />
    <logger name="logError2file" writeTo="logError2file"/>
    <logger name="log2db" writeTo="log2db" final="true"  />    
  </rules>
</nlog>

<!--DBLog.Process(key, "lnUserName", "O001OrderNo", key + "执行" + DateTime.Now, "K1KeyWord");-->

<!--CREATE TABLE[dbo].[LogEntries](
    [Id][bigint] IDENTITY(1, 1) NOT NULL, [FromUser][varchar](255) NOT NULL, [ToUser][varchar](255) NOT NULL, [ApprovalUser][varchar](255) NOT NULL,[ApprovalTime][datetime2](7) NOT NULL, [SubjectTitle][varchar](5000) NOT NULL, [SendTime][datetime2](7) NOT NULL,[LogTime][datetime2](7) NOT NULL, [Status][bit] NOT NULL,
    CONSTRAINT[PK_LogEntries] PRIMARY KEY CLUSTERED(
        [Id] ASC
    ) WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON[PRIMARY]
) ON[PRIMARY]
-->

<!--Trace - 最常见的记录信息，一般用于普通输出

Debug - 同样是记录信息，不过出现的频率要比Trace少一些，一般用来调试程序

Info - 信息类型的消息

Warn - 警告信息，一般用于比较重要的场合

Error - 错误信息

Fatal - 致命异常信息。一般来讲，发生致命异常之后程序将无法继续执行。-->